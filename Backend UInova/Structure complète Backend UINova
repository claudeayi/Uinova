backend/
├─ src/
│  ├─ app.ts                     # App Express : middlewares globaux + routes
│  ├─ server.ts                  # Lancement serveur HTTP + Socket.io + arrêts propres
│  │
│  ├─ controllers/               # Contrôleurs (logique métier)
│  │  ├─ authController.ts        # Authentification / JWT
│  │  ├─ projectController.ts     # CRUD projets
│  │  ├─ pageController.ts        # CRUD pages
│  │  ├─ exportController.ts      # Lancer un export (HTML, React, Flutter, PWA…)
│  │  ├─ paymentController.ts     # Paiements (Stripe, PayPal, CinetPay)
│  │  ├─ badgeController.ts       # Gestion des badges
│  │  ├─ notificationController.ts# Notifications utilisateurs
│  │  ├─ adminController.ts       # Gestion admin (utilisateurs, quotas…)
│  │  └─ uploadController.ts      # Upload fichiers (images, assets…)
│  │
│  ├─ routes/                     # Routes Express
│  │  ├─ auth.ts
│  │  ├─ projects.ts
│  │  ├─ pages.ts
│  │  ├─ exports.ts
│  │  ├─ payments.ts
│  │  ├─ badges.ts
│  │  ├─ notifications.ts
│  │  ├─ admin.ts
│  │  ├─ upload.ts
│  │  ├─ ai.ts                     # API AI (assistant, onboarding)
│  │  └─ health.ts                 # Endpoint de santé (/health)
│  │
│  ├─ middlewares/
│  │  ├─ security.ts              # Headers sécurisés, CORS, helmet
│  │  ├─ rateLimit.ts             # Limiteur de requêtes
│  │  └─ errorHandler.ts          # Middleware global erreurs
│  │
│  ├─ services/
│  │  ├─ collab.ts                # Collaboration temps réel (Socket.io)
│  │  ├─ paymentServices.ts       # Intégration Stripe, PayPal, CinetPay
│  │  ├─ exportService.ts         # Gestion exports
│  │  ├─ aiServices.ts            # Appels IA (OpenAI, ML interne)
│  │  └─ cloud.ts                 # Stockage cloud (S3, GCP, etc.)
│  │
│  ├─ utils/
│  │  ├─ prisma.ts                # Prisma client
│  │  ├─ jwt.ts                   # Gestion JWT
│  │  ├─ hash.ts                  # Hashing mots de passe
│  │  ├─ mailer.ts                # Envoi d’emails
│  │  ├─ logger.ts                # Logger centralisé (pino/winston)
│  │  └─ swagger.ts               # Loader swagger.yaml
│  │
│  └─ __tests__/                  # Tests unitaires / e2e (si actif)
│
├─ prisma/
│  ├─ schema.prisma               # Modèle de données complet
│  └─ seed.ts                     # Script de seed initial
│
├─ swagger.yaml                   # Documentation API
├─ package.json
├─ tsconfig.json
├─ Dockerfile
├─ .dockerignore
├─ .env.example                   # Variables env (DB, JWT, APIs, paiements…)
└─ .github/workflows/ci.yml       # CI/CD (build + tests + déploiement)
